题目：

给定一个2维网格图，其中“1”(陆地)和“0”(水)，计算岛屿的数量。岛屿被水包围，通过水平或垂直连接相邻的陆地形成。你可以假设网格的四边都被水包围着。

解题思路：

从最左上角开始遍历这个网格图，当遍历到该点值为1的时候，将其更新为0，并以该点进行扩展，扩展方式为上下左右四个方向，扩展到的陆地（即值为1）将其值更新为0，直到不能扩展。再继续遍历下一个值为1点的，更新为0后进行扩展。

代码（Python）：

class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        output = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j]=='1':
                    output += 1
                    self.dfs(grid,i,j)      #本题中的dfs方程仅作吧遍历到访过的数变成0，相当于连连看消掉
        return output
    
    def dfs(self,grid,i,j):
        grid[i][j] = '0'          #先把该点标记为0
        if i-1>=0 and grid[i-1][j]=='1':        ##四个方向都跑查看是否是‘1’，是的话继续消
            self.dfs(grid,i-1,j)            # ----> 根据题意，相连的岛‘1’都变成0消掉
        if i+1<len(grid) and grid[i+1][j]=='1':
            self.dfs(grid,i+1,j)
        if j-1>=0 and grid[i][j-1]=='1':
            self.dfs(grid,i,j-1)
        if j+1<len(grid[0]) and grid[i][j+1]=='1':
            self.dfs(grid,i,j+1)
        
                    
 


————————————————
版权声明：本文为CSDN博主「诚实的小小乐」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/xiaoxiaoley/article/details/82557634
