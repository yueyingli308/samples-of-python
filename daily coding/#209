看到让连续子数组满足一定条件的很多都用了双指针，比如713. Subarray Product Less Than K。
Given an array of n positive integers and a positive integer s, find the minimal length of a contiguous subarray of which the sum ≥ s. If there isn’t one, return 0 instead.

Example:

Input: s = 7, nums = [2,3,1,2,4,3]
Output: 2
Explanation: the subarray [4,3] has the minimal length under the problem constraint.


##############Python codes####################3

class Solution:
    def minSubArrayLen(self, s, nums):
        """
        :type s: int
        :type nums: List[int]
        :rtype: int
        """
        if sum(nums) < s: return 0
        res = len(nums)+1
        l, r, total = 0, 0, 0
        while r < len(nums):
            total += nums[r]
            while total >= s:
                # move left to the most-right
                res = min(res, r-l+1)
                total -= nums[l]   ###减去total当前最靠左边的数，区间位移一个，但是可以保留当前的和，因为一定会比target小
                l += 1
            r += 1
        return res if res != len(nums)+1 else 0
————————————————
版权声明：本文为CSDN博主「闲庭信步的空间」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/danspace1/article/details/86661149

#################思路####################
双指针，都从0，0开始，所以对区间的长度事逐渐变长的，在left指针保持不变下一格一格地移动右指针，满足target下记录当前right下的最小值，再往后挪看下一个
应该注意，每次开始一个新的区间计算，不需回归所有的数据为0，因为加和后一定是小于target的，所以用
